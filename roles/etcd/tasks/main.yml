- name: make etcd dir
  file:
    path: '{{ dpath }}/etcd'
    state: directory
    mode: 0755

- name: copy etcd image
  copy:
    src: '{{ base_dir }}/images/etcd.tar.bz2'
    dest: '{{ dpath }}/etcd'
  run_once: true

- name: load etcd image
  docker_image:
    load_path: '{{ dpath }}/etcd/etcd.tar.bz2'
    name: etcd
    timeout: 600
    source: load
  run_once: true

- name: make etcd cert dir
  file:
    path: '/etc/etcd/pki'
    state: directory
    mode: 0755

- name: copy cfssl tool
  copy:
    src: '{{ item }}'
    dest: /usr/local/bin
    mode: '0755'
  with_items:
  - '{{ base_dir }}/bin/cfssl'
  - '{{ base_dir }}/bin/cfssljson'
  - '{{ base_dir }}/bin/cfssl-certinfo'
  run_once: true

- name: copy certificates JSON files
  copy:
    src: '{{ item }}'
    dest: '{{ dpath }}/etcd/'
    mode: 0755
  with_items:
  - ca-csr.json
  - ca-config.json
  - etcd-csr.json
  run_once: true

- name: generate etcd certificates
  shell: "cfssl gencert -initca ca-csr.json | cfssljson -bare ca && \
    cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json \
    -hostname=127.0.0.1,{% for host in groups['etcd'] %}{{ hostvars[host].ansible_ssh_host }},{% endfor %} \
    -profile=etcd etcd-csr.json | cfssljson -bare etcd && \
    cp *.pem /etc/etcd/pki/"
  args:
    chdir: '{{ dpath }}/etcd/'
    creates: '/etc/etcd/pki/*.pem'
  run_once: true

- name: fetch etcd certificates
  fetch:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    flat: true
  with_items:
  - { src: '/etc/etcd/pki/ca.pem', dest: '{{ base_dir }}/etcd/ca.pem' }
  - { src: '/etc/etcd/pki/ca-key.pem', dest: '{{ base_dir }}/etcd/ca-key.pem' }
  - { src: '/etc/etcd/pki/etcd.pem', dest: '{{ base_dir }}/etcd/etcd.pem' }
  - { src: '/etc/etcd/pki/etcd-key.pem', dest: '{{ base_dir }}/etcd/etcd-key.pem' }
  run_once: true

- name: copy certificates
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
  with_items:
  - { src: '{{ base_dir }}/etcd/ca.pem', dest: '/etc/etcd/pki/ca.pem' }
  - { src: '{{ base_dir }}/etcd/ca-key.pem', dest: '/etc/etcd/pki/ca-key.pem' }
  - { src: '{{ base_dir }}/etcd/etcd.pem', dest: '/etc/etcd/pki/etcd.pem' }
  - { src: '{{ base_dir }}/etcd/etcd-key.pem', dest: '/etc/etcd/pki/etcd-key.pem' }

- name: run etcd
  docker_container:
    name: etcd
    network_mode: host
    restart_policy: unless-stopped
    image: "k8s.gcr.io/etcd-amd64:${etcd_version}"
    command: [
        "etcd",
        "{% for host in ansible_play_batch -%}{% if host == inventory_hostname -%}--name etcd{{ loop.index0 }}{% endif -%}{% endfor -%}",
        "--data-dir /var/lib/etcd",
        "--advertise-client-urls https://{{ hostvars[inventory_hostname].ansible_ssh_host }}:2379",
        "--listen-client-urls https://{{ hostvars[inventory_hostname].ansible_ssh_host }}:2379",
        "--listen-peer-urls https://{{ hostvars[inventory_hostname].ansible_ssh_host }}:2380",
        "--initial-cluster-token etcd-cluster",
        "--initial-advertise-peer-urls https://{{ hostvars[inventory_hostname].ansible_ssh_host }}:2380",
        "--initial-cluster {% for host in groups['etcd'] %}etcd{{ loop.index0 }}=https://{{ hostvars[host].ansible_ssh_host }}:2380{% if not loop.last %},{% endif %}{% endfor %}",
        "--initial-cluster-state new",
        "--client-cert-auth",
        "--trusted-ca-file=/etcd-cert/ca.pem",
        "--cert-file=/etcd-cert/etcd.pem",
        "--key-file=/etcd-cert/etcd-key.pem",
        "--peer-client-cert-auth",
        "--peer-trusted-ca-file=/etcd-cert/ca.pem",
        "--peer-cert-file=/etcd-cert/etcd.pem",
        "--peer-key-file=/etcd-cert/etcd-key.pem"
      ]
    volumes:
      - "{{ etcd_data_path }}:/var/lib/etcd"
      - "/etc/etcd/pki:/etcd-cert"
