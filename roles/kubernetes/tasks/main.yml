- block:
  - name: check kubernetes services
    script: scripts/check_kubelet_kubeproxy.sh
    register: check_output

  - name: setup master nodes
    include_tasks: master-node.yml
    when: (not (check_output.stdout == True)) and (not (add_worker_node_only == True)) and (not (upgrade_cluster == true))

  - name: fetch admin.conf
    fetch:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
      flat: true
    with_items:
    - { src: '/etc/kubernetes/admin.conf', dest: 'file/admin.conf' }
    run_once: true
  when: "inventory_hostname in groups['master']"

- block:
  - name: check kubernetes services
    script: scripts/check_kubelet_kubeproxy.sh
    register: check_output

  - name: setup worker nodes
    include_tasks: worker-node.yml
    when: not (check_output.stdout == True) and (not (upgrade_cluster == true))
  when: "inventory_hostname in groups['node']"

- block:
  - name: push images
    include_tasks: push-images.yml
    run_once: true
    when: (upgrade_cluster == true)

  - name: copy upgrade scripts
    include_tasks: copy-upgrade-scripts.yml
    when: (upgrade_cluster == true)

  - name: upgrade the first master node
    shell: ./upgrade_first_master_node.sh
    args:
      chdir: '{{ DPATH }}'
    run_once: true
    when: (upgrade_cluster == true) and (auto_upgrade_nodes == true)

  - name: upgrade other master nodes
    shell: ./upgrade_other_master_nodes.sh
    args:
      chdir: '{{ DPATH }}'
    when: (upgrade_cluster == true) and (auto_upgrade_nodes == true)
  when: "inventory_hostname in groups['master']"

- block:
  - name: copy upgrade scripts
    include_tasks: copy-upgrade-scripts.yml
    when: (upgrade_cluster == true)

  - name: copy k8s admin.conf for upgrading
    copy:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
    with_items:
    - { src: 'file/admin.conf', dest: '{{ ansible_env.HOME }}/.kube/config' }
    when: (upgrade_cluster == true)

  - name: setup kubectl certification
    shell: |
      sed -i "s/.*server:.*/    server: https:\/\/{{ endpoint }}/g" $HOME/.kube/config
      chown $(id -u):$(id -g) $HOME/.kube/config
    when: (upgrade_cluster == true)

  - name: upgrade worker nodes
    shell: ./upgrade_worker_nodes.sh
    args:
      chdir: '{{ DPATH }}'
    when: (upgrade_cluster == true) and (auto_upgrade_nodes == true)

  - name: remove kubectl cert
    file:
      path: '{{ item }}'
      state: absent
    with_items:
      - '{{ ansible_env.HOME }}/.kube/config'
    when: (upgrade_cluster == true) and (auto_upgrade_nodes == true)
  when: "inventory_hostname in groups['node']"  
