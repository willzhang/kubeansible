- name: make lb dir
  file:
    path: '{{ dpath }}/loadbalancer'
    state: directory
    mode: 0755

- name: generate lb config
  template:
    src: haproxy.cfg.j2
    dest: '{{ dpath }}/loadbalancer/haproxy.cfg'

- name: copy lb images
  copy:
    src: '{{ base_dir }}/images/haproxy-{{ haproxy_version }}.tar.bz2'
    dest: '{{ dpath }}/loadbalancer'

- name: load lb image
  docker_image:
    source: load
    load_path: '{{ dpath  }}/loadbalancer/haproxy-{{ haproxy_version }}.tar.bz2'
    name: lb
    timeout: 600

- name: docker login
  docker_login:
    registry: '{{ registry_endpoint }}'
    username: '{{ registry_user }}'
    password: '{{ registry_password }}'
    reauthorize: true
  run_once: true

- name: Tag and push to local registry
  docker_image:
    name: '{{ item.repo }}/{{ item.name }}'
    repository: '{{ registry_endpoint }}/{{ registry_project }}/{{ item.name }}'
    tag: '{{ item.tag }}'
    push: yes
    source: local
  with_items:
    - { repo: 'docker.io', name: 'haproxy', tag: '{{ haproxy_version }}' }
  run_once: true

- name: remove original images tag
  docker_image:
    state: absent
    name: '{{ item.repo }}/{{ item.name }}'
    tag: '{{ item.tag }}'
  with_items:
    - { repo: 'docker.io', name: 'haproxy', tag: '{{ haproxy_version }}' }
  run_once: ture

- name: add lb dns to /etc/hosts
  blockinfile:
    path: /etc/hosts
    block: '127.0.0.1 server.k8s.local'
    marker: '# {mark} lb'

- name: run lb
  docker_container:
    name: haproxy
    restart_policy: unless-stopped
    image: "{{ registry_endpoint }}/{{ registry_project }}/haproxy:{{ haproxy_version }}"
    ports:
     - "{{ lb_kube_apiserver_port }}:6443"
     - "8081:8081"
    volumes:
    - '{{ dpath }}/loadbalancer/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro'
